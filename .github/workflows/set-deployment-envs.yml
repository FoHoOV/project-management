name: CI

on:
  pull_request:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Vercel Env
        run: |
          # Get Backend URL for this deployment
          BACKEND_RESPONSE=$(curl -s -o response.txt -w "%{http_code}" -X GET \
            "https://api.vercel.com/v6/now/deployments?projectId=${{ secrets.VERCEL_BACKEND_PROJECT_ID }}&meta-githubCommitSha=${{ github.sha }}" \
            -H "Authorization: Bearer ${{ secrets.VERCEL_API_TOKEN }}")

          if [ "$BACKEND_RESPONSE" -ne 200 ]; then
            echo "Failed to fetch backend URL. HTTP status: $BACKEND_RESPONSE"
            cat response.txt
            exit 1
          fi

          BACKEND_URL=$(cat response.txt | jq -r '.deployments[0].url')
          echo "Backend URL: $BACKEND_URL"

          # Update the PUBLIC_API_URL environment variable
          UPDATE_RESPONSE=$(curl -s -o response.txt -w "%{http_code}" -X POST \
            "https://api.vercel.com/v9/projects/${{ secrets.VERCEL_FRONTEND_PROJECT_ID }}/env" \
            -H "Authorization: Bearer ${{ secrets.VERCEL_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{
                  \"gitBranch\": \"${{ github.head_ref }}\",
                  \"key\": \"PUBLIC_API_URL\",
                  \"target\": [\"preview\"],
                  \"type\": \"plain\",
                  \"value\": \"$BACKEND_URL\",
                  \"comment\": \"backend url for ${{ github.head_ref }}\"
                }")

          if [ "$UPDATE_RESPONSE" -ne 200 ]; then
            echo "Failed to update Vercel environment variable. HTTP status: $UPDATE_RESPONSE"
            cat response.txt
            exit 1
          fi

          echo "Environment variable PUBLIC_API_URL updated successfully."

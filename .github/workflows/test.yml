name: CI

on:
  pull_request:
    branches:
      - master

jobs:
  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12" # or whichever version you're using

      - name: Install dependencies
        run: |
          cd backend
          pip install -r requirements.txt
      - name: Create .env file for backend
        run: |
          echo ALLOWED_ORIGINS = ["http://localhost", "http://localhost:4173","http://localhost:5173", "http://localhost:5174"] > ./.env
          echo IS_SQLALCHEMY_LOG_ENABLED  = True >> ./.env
          echo SQLALCHEMY_DATABASE_URL = "sqlite:///./todos.db" >> ./.env
          echo SECRET_KEY = "bc3047a076767576ef3a9adf83aea2e4747819ec479810d7b98cbed5d40b1cd9" >> ./.env
      - name: Run backend tests
        run: |
          cd backend
          python3 -m pytest

      - name: Start backend service
        run: |
          cd backend
          python -m uvicorn main:app --host 0.0.0.0 --port 8080 &
        # Ensure the service is running before moving to the next job

  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    needs: test-backend # Ensure this job runs after the backend tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20" # or whichever version you're using

      - name: Install dependencies
        run: |
          cd frontend
          npm install
      - name: Create .env file for frontend
        run: |
          echo PUBLIC_API_URL = http://127.0.0.1:8080 > ./.env
          echo PUBLIC_API_REQUEST_TIMEOUT_MS = 10000 >> ./.env
          echo PUBLIC_COOKIES_EXPIRATION_SPAN_SECONDS = 5184000 >> ./.env
      - name: Run frontend tests (with backend service running)
        run: |
          cd frontend
          npm run test
